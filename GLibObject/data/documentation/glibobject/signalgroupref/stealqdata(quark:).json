{"abstract":[{"type":"text","text":"This function gets back user data pointers stored via"},{"text":" ","type":"text"},{"type":"codeVoice","code":"g_object_set_qdata()"},{"text":" and removes the ","type":"text"},{"type":"codeVoice","code":"data"},{"type":"text","text":" from object"},{"text":" ","type":"text"},{"type":"text","text":"without invoking its "},{"code":"destroy()","type":"codeVoice"},{"text":" function (if any was","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"set)."},{"text":" ","type":"text"},{"text":"Usually, calling this function is only required to update","type":"text"},{"type":"text","text":" "},{"type":"text","text":"user data pointers with a destroy notifier, for example:"},{"type":"text","text":" "},{"text":"(C Language Example):","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stealQdata"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"quark"},{"text":": ","kind":"text"},{"text":"GQuark","preciseIdentifier":"c:@T@GQuark","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:gtypes.h@T@gpointer","text":"gpointer"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"syntax":"C","code":["void","object_add_to_user_list (GObject     *object,","                         const gchar *new_string)","{","  \/\/ the quark, naming the object data","  GQuark quark_string_list = g_quark_from_static_string (\"my-string-list\");","  \/\/ retrieve the old string list","  GList *list = g_object_steal_qdata (object, quark_string_list);","","  \/\/ prepend new string","  list = g_list_prepend (list, g_strdup (new_string));","  \/\/ this changed 'list', so we need to set it again","  g_object_set_qdata_full (object, quark_string_list, list, free_string_list);","}","static void","free_string_list (gpointer data)","{","  GList *node, *list = data;","","  for (node = list; node; node = node->next)","    g_free (node->data);","  g_list_free (list);","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Using ","type":"text"},{"type":"codeVoice","code":"g_object_get_qdata()"},{"type":"text","text":" in the above example, instead of"},{"type":"text","text":" "},{"code":"g_object_steal_qdata()","type":"codeVoice"},{"type":"text","text":" would have left the destroy function set,"},{"text":" ","type":"text"},{"type":"text","text":"and thus the partial string list would have been freed upon"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_object_set_qdata_full()"},{"type":"text","text":"."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/signalgroupref\/stealqdata(quark:)"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stealQdata"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"quark"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@T@GQuark","kind":"typeIdentifier","text":"GQuark"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:gtypes.h@T@gpointer","text":"gpointer"},{"text":"?","kind":"text"}],"symbolKind":"method","modules":[{"name":"GLibObject"}],"extendedModule":"GLibObject","externalID":"s:10GLibObject0B8ProtocolPAAE10stealQdata5quarkSvSgs6UInt32V_tF::SYNTHESIZED::s:10GLibObject14SignalGroupRefV","role":"symbol","roleHeading":"Instance Method","title":"stealQdata(quark:)"},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/SignalGroupRef","doc:\/\/GLibObject\/documentation\/GLibObject\/SignalGroupRef\/ObjectProtocol-Implementations"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/SignalGroupRef\/stealQdata(quark:)"},"references":{"doc://GLibObject/documentation/GLibObject/SignalGroupRef":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalGroupRef"}],"url":"\/documentation\/glibobject\/signalgroupref","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/SignalGroupRef","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SignalGroupRef","kind":"identifier"}],"type":"topic","abstract":[{"type":"codeVoice","code":"GSignalGroup"},{"text":" manages a collection of signals on a ","type":"text"},{"code":"GObject","type":"codeVoice"},{"type":"text","text":"."}],"title":"SignalGroupRef"},"doc://GLibObject/documentation/GLibObject/SignalGroupRef/ObjectProtocol-Implementations":{"type":"topic","url":"\/documentation\/glibobject\/signalgroupref\/objectprotocol-implementations","kind":"article","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/SignalGroupRef\/ObjectProtocol-Implementations","role":"collectionGroup","abstract":[],"title":"ObjectProtocol Implementations"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/SignalGroupRef/stealQdata(quark:)":{"abstract":[{"text":"This function gets back user data pointers stored via","type":"text"},{"text":" ","type":"text"},{"code":"g_object_set_qdata()","type":"codeVoice"},{"type":"text","text":" and removes the "},{"code":"data","type":"codeVoice"},{"text":" from object","type":"text"},{"type":"text","text":" "},{"type":"text","text":"without invoking its "},{"type":"codeVoice","code":"destroy()"},{"text":" function (if any was","type":"text"},{"type":"text","text":" "},{"type":"text","text":"set)."},{"text":" ","type":"text"},{"type":"text","text":"Usually, calling this function is only required to update"},{"text":" ","type":"text"},{"text":"user data pointers with a destroy notifier, for example:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(C Language Example):"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/SignalGroupRef\/stealQdata(quark:)","url":"\/documentation\/glibobject\/signalgroupref\/stealqdata(quark:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stealQdata"},{"text":"(","kind":"text"},{"text":"quark","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@GQuark","text":"GQuark"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:gtypes.h@T@gpointer","kind":"typeIdentifier","text":"gpointer"},{"text":"?","kind":"text"}],"kind":"symbol","title":"stealQdata(quark:)"}}}