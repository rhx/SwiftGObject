{"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeValueLCopyFunc","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeValueLCopyFunc","kind":"identifier"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"GTypeValueLCopyFunc","preciseIdentifier":"c:@T@GTypeValueLCopyFunc"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"n_collect_values","type":"codeVoice"},{"text":" argument equals the string length of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"lcopy_format"},{"type":"text","text":", and "},{"type":"codeVoice","code":"collect_flags"},{"text":" may contain ","type":"text"},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/valueNocopyContents","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"In contrast to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeValueCollectFunc","type":"reference"},{"type":"text","text":", this function is obliged to always"},{"text":" ","type":"text"},{"type":"text","text":"properly support "},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/valueNocopyContents"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"Similar to "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeValueCollectFunc","type":"reference","isActive":true},{"type":"text","text":" the function may prematurely abort by"},{"text":" ","type":"text"},{"type":"text","text":"returning a newly allocated string describing an error condition. To"},{"type":"text","text":" "},{"type":"text","text":"complete the string example:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"(C Language Example):","type":"text"}]},{"code":["gchar **string_p = collect_values[0].v_pointer;","g_return_val_if_fail (string_p != NULL,","  g_strdup (\"string location passed as NULL\"));","","if (collect_flags & G_VALUE_NOCOPY_CONTENTS)","  *string_p = value->data[0].v_pointer;","else","  *string_p = g_strdup (value->data[0].v_pointer);"],"syntax":"C","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"And an illustrative version of this function for reference-counted","type":"text"},{"type":"text","text":" "},{"text":"types:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"syntax":"C","code":["GObject **object_p = collect_values[0].v_pointer;","g_return_val_if_fail (object_p != NULL,","  g_strdup (\"object location passed as NULL\"));","","if (value->data[0].v_pointer == NULL)","  *object_p = NULL;","else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) \/\/ always honour","  *object_p = value->data[0].v_pointer;","else","  *object_p = g_object_ref (value->data[0].v_pointer);","","return NULL;"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/typevaluelcopyfunc"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"typealias","title":"TypeValueLCopyFunc","externalID":"s:10GLibObject18TypeValueLCopyFunca","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeValueLCopyFunc","kind":"identifier"}],"modules":[{"name":"GLibObject"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeValueLCopyFunc"}],"roleHeading":"Type Alias"},"abstract":[{"text":"This function is responsible for storing the ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" "},{"type":"text","text":"contents into arguments passed through a variadic argument list which"},{"type":"text","text":" "},{"type":"text","text":"got collected into "},{"code":"collect_values","type":"codeVoice"},{"text":" according to ","type":"text"},{"type":"codeVoice","code":"lcopy_format"},{"type":"text","text":"."}],"references":{"doc://GLibObject/documentation/GLibObject/TypeValueCollectFunc":{"kind":"symbol","type":"topic","abstract":[{"text":"This function is responsible for converting the values collected from","type":"text"},{"type":"text","text":" "},{"text":"a variadic argument list into contents suitable for storage in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Value"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeValueCollectFunc"}],"url":"\/documentation\/glibobject\/typevaluecollectfunc","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeValueCollectFunc","title":"TypeValueCollectFunc","role":"symbol","navigatorTitle":[{"text":"TypeValueCollectFunc","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/Value":{"navigatorTitle":[{"kind":"identifier","text":"Value"}],"abstract":[{"type":"text","text":"This class is the main Swift wrapper with memory management"},{"type":"text","text":" "},{"type":"text","text":"for underlying "},{"type":"codeVoice","code":"GValues"},{"text":" (the opaque GLib structure used to","type":"text"},{"type":"text","text":" "},{"text":"hold different types of values.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/value","role":"symbol","title":"Value","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Value","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/TypeValueLCopyFunc":{"role":"symbol","kind":"symbol","url":"\/documentation\/glibobject\/typevaluelcopyfunc","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeValueLCopyFunc","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"TypeValueLCopyFunc","kind":"identifier"}],"abstract":[{"text":"This function is responsible for storing the ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"contents into arguments passed through a variadic argument list which"},{"type":"text","text":" "},{"text":"got collected into ","type":"text"},{"code":"collect_values","type":"codeVoice"},{"type":"text","text":" according to "},{"code":"lcopy_format","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TypeValueLCopyFunc"}],"type":"topic","title":"TypeValueLCopyFunc"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/valueNocopyContents":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"If passed to "},{"type":"codeVoice","code":"G_VALUE_COLLECT()"},{"text":", allocated data wonâ€™t be copied","type":"text"},{"type":"text","text":" "},{"text":"but used verbatim. This does not affect ref-counted types like","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"objects. This does not affect usage of "},{"type":"codeVoice","code":"g_value_copy()"},{"text":", the data will","type":"text"},{"type":"text","text":" "},{"text":"be copied if it is not ref-counted.","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"valueNocopyContents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"url":"\/documentation\/glibobject\/valuenocopycontents","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/valueNocopyContents","title":"valueNocopyContents","role":"symbol"}}}