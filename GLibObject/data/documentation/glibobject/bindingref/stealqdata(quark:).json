{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/bindingref\/stealqdata(quark:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stealQdata"},{"kind":"text","text":"("},{"text":"quark","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@GQuark","kind":"typeIdentifier","text":"GQuark"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"text":"?","kind":"text"}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"codeListing","syntax":"C","code":["void","object_add_to_user_list (GObject     *object,","                         const gchar *new_string)","{","  \/\/ the quark, naming the object data","  GQuark quark_string_list = g_quark_from_static_string (\"my-string-list\");","  \/\/ retrieve the old string list","  GList *list = g_object_steal_qdata (object, quark_string_list);","","  \/\/ prepend new string","  list = g_list_prepend (list, g_strdup (new_string));","  \/\/ this changed 'list', so we need to set it again","  g_object_set_qdata_full (object, quark_string_list, list, free_string_list);","}","static void","free_string_list (gpointer data)","{","  GList *node, *list = data;","","  for (node = list; node; node = node->next)","    g_free (node->data);","  g_list_free (list);","}"]},{"inlineContent":[{"type":"text","text":"Using "},{"code":"g_object_get_qdata()","type":"codeVoice"},{"text":" in the above example, instead of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"g_object_steal_qdata()"},{"text":" would have left the destroy function set,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and thus the partial string list would have been freed upon"},{"type":"text","text":" "},{"code":"g_object_set_qdata_full()","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/ObjectProtocol-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/stealQdata(quark:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stealQdata","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"quark"},{"text":": ","kind":"text"},{"text":"GQuark","preciseIdentifier":"c:@T@GQuark","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"GLibObject","title":"stealQdata(quark:)","externalID":"s:10GLibObject0B8ProtocolPAAE10stealQdata5quarkSvSgs6UInt32V_tF::SYNTHESIZED::s:10GLibObject10BindingRefV","modules":[{"name":"GLibObject"}],"role":"symbol"},"abstract":[{"type":"text","text":"This function gets back user data pointers stored via"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_object_set_qdata()"},{"type":"text","text":" and removes the "},{"type":"codeVoice","code":"data"},{"type":"text","text":" from object"},{"type":"text","text":" "},{"type":"text","text":"without invoking its "},{"type":"codeVoice","code":"destroy()"},{"text":" function (if any was","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"set)."},{"type":"text","text":" "},{"text":"Usually, calling this function is only required to update","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"user data pointers with a destroy notifier, for example:"},{"type":"text","text":" "},{"text":"(C Language Example):","type":"text"}],"kind":"symbol","references":{"doc://GLibObject/documentation/GLibObject/BindingRef/ObjectProtocol-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/ObjectProtocol-Implementations","title":"ObjectProtocol Implementations","abstract":[],"kind":"article","url":"\/documentation\/glibobject\/bindingref\/objectprotocol-implementations"},"doc://GLibObject/documentation/GLibObject/BindingRef":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingRef","kind":"identifier"}],"navigatorTitle":[{"text":"BindingRef","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"GObject"},{"text":" instance (or source) and another property on another ","type":"text"},{"code":"GObject","type":"codeVoice"},{"type":"text","text":" "},{"text":"instance (or target).","type":"text"}],"role":"symbol","url":"\/documentation\/glibobject\/bindingref","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef","type":"topic","title":"BindingRef"},"doc://GLibObject/documentation/GLibObject/BindingRef/stealQdata(quark:)":{"url":"\/documentation\/glibobject\/bindingref\/stealqdata(quark:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stealQdata"},{"text":"(","kind":"text"},{"text":"quark","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@GQuark","text":"GQuark"},{"text":") -> ","kind":"text"},{"text":"gpointer","kind":"typeIdentifier","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"text":"?","kind":"text"}],"title":"stealQdata(quark:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/stealQdata(quark:)","role":"symbol","abstract":[{"text":"This function gets back user data pointers stored via","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_object_set_qdata()"},{"text":" and removes the ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":" from object"},{"type":"text","text":" "},{"text":"without invoking its ","type":"text"},{"code":"destroy()","type":"codeVoice"},{"text":" function (if any was","type":"text"},{"type":"text","text":" "},{"type":"text","text":"set)."},{"type":"text","text":" "},{"type":"text","text":"Usually, calling this function is only required to update"},{"type":"text","text":" "},{"type":"text","text":"user data pointers with a destroy notifier, for example:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}],"type":"topic","kind":"symbol"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"}}}