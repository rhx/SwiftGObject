{"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/object\/signalhandlerunblock(handlerid:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/Object","doc:\/\/GLibObject\/documentation\/GLibObject\/Object\/ObjectProtocol-Implementations"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/Object\/signalHandlerUnblock(handlerID:)"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signalHandlerUnblock"},{"kind":"text","text":"("},{"text":"handlerID","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"The ","type":"text"},{"code":"handlerID","type":"codeVoice"},{"type":"text","text":" has to be a valid id of a signal handler that is"},{"type":"text","text":" "},{"type":"text","text":"connected to a signal of "},{"type":"codeVoice","code":"instance"},{"type":"text","text":" and is currently blocked."}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Instance Method","extendedModule":"GLibObject","role":"symbol","externalID":"s:10GLibObject0B8ProtocolPAAE20signalHandlerUnblock9handlerIDySi_tF::SYNTHESIZED::s:10GLibObject0B0C","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"signalHandlerUnblock","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlerID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"title":"signalHandlerUnblock(handlerID:)","modules":[{"name":"GLibObject"}],"symbolKind":"method"},"abstract":[{"type":"text","text":"Undoes the effect of a previous "},{"code":"g_signal_handler_block()","type":"codeVoice"},{"text":" call.  A","type":"text"},{"type":"text","text":" "},{"text":"blocked handler is skipped during signal emissions and will not be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"invoked, unblocking it (for exactly the amount of times it has been"},{"text":" ","type":"text"},{"type":"text","text":"blocked before) reverts its “blocked” state, so the handler will be"},{"text":" ","type":"text"},{"text":"recognized by the signal system and is called upon future or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"currently ongoing signal emissions (since the order in which"},{"type":"text","text":" "},{"text":"handlers are called during signal emissions is deterministic,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whether the unblocked handler in question is called as part of a"},{"text":" ","type":"text"},{"type":"text","text":"currently ongoing emission depends on how far that emission has"},{"text":" ","type":"text"},{"type":"text","text":"proceeded yet)."}],"references":{"doc://GLibObject/documentation/GLibObject/Object":{"abstract":[{"text":"The base object type.","type":"text"}],"kind":"symbol","type":"topic","title":"Object","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Object"}],"url":"\/documentation\/glibobject\/object","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Object"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Object"},"doc://GLibObject/documentation/GLibObject/Object/ObjectProtocol-Implementations":{"url":"\/documentation\/glibobject\/object\/objectprotocol-implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Object\/ObjectProtocol-Implementations","title":"ObjectProtocol Implementations","abstract":[]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/Object/signalHandlerUnblock(handlerID:)":{"type":"topic","role":"symbol","url":"\/documentation\/glibobject\/object\/signalhandlerunblock(handlerid:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Object\/signalHandlerUnblock(handlerID:)","kind":"symbol","title":"signalHandlerUnblock(handlerID:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"signalHandlerUnblock"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlerID"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Undoes the effect of a previous "},{"code":"g_signal_handler_block()","type":"codeVoice"},{"type":"text","text":" call.  A"},{"text":" ","type":"text"},{"type":"text","text":"blocked handler is skipped during signal emissions and will not be"},{"type":"text","text":" "},{"text":"invoked, unblocking it (for exactly the amount of times it has been","type":"text"},{"type":"text","text":" "},{"type":"text","text":"blocked before) reverts its “blocked” state, so the handler will be"},{"text":" ","type":"text"},{"text":"recognized by the signal system and is called upon future or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"currently ongoing signal emissions (since the order in which"},{"text":" ","type":"text"},{"type":"text","text":"handlers are called during signal emissions is deterministic,"},{"text":" ","type":"text"},{"text":"whether the unblocked handler in question is called as part of a","type":"text"},{"type":"text","text":" "},{"text":"currently ongoing emission depends on how far that emission has","type":"text"},{"type":"text","text":" "},{"type":"text","text":"proceeded yet)."}]}}}