{"variants":[{"paths":["\/documentation\/glibobject\/objectprotocol\/signalhashandlerpending(signalid:detail:maybeblocked:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"text":"Returns whether there are any handlers connected to ","type":"text"},{"code":"instance","type":"codeVoice"},{"type":"text","text":" for the"},{"type":"text","text":" "},{"type":"text","text":"given signal id and detail."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol\/signalHasHandlerPending(signalID:detail:mayBeBlocked:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"externalID":"s:10GLibObject0B8ProtocolPAAE23signalHasHandlerPending0D2ID6detail12mayBeBlockedSbSi_s6UInt32VSbtF","title":"signalHasHandlerPending(signalID:detail:mayBeBlocked:)","role":"symbol","extendedModule":"GLibObject","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"GLibObject"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"signalHasHandlerPending","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"signalID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"detail"},{"kind":"text","text":": "},{"text":"GQuark","kind":"typeIdentifier","preciseIdentifier":"c:@T@GQuark"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"mayBeBlocked"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signalHasHandlerPending"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"signalID"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"detail"},{"text":": ","kind":"text"},{"text":"GQuark","preciseIdentifier":"c:@T@GQuark","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"mayBeBlocked"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"detail","type":"codeVoice"},{"type":"text","text":" is 0 then it will only match handlers that were connected"},{"type":"text","text":" "},{"text":"without detail.  If ","type":"text"},{"code":"detail","type":"codeVoice"},{"type":"text","text":" is non-zero then it will match handlers"},{"type":"text","text":" "},{"type":"text","text":"connected both without detail and with the given detail.  This is"},{"type":"text","text":" "},{"text":"consistent with how a signal emitted with ","type":"text"},{"type":"codeVoice","code":"detail"},{"type":"text","text":" would be delivered"},{"type":"text","text":" "},{"type":"text","text":"to those handlers."}]},{"type":"paragraph","inlineContent":[{"text":"Since 2.46 this also checks for a non-default class closure being","type":"text"},{"text":" ","type":"text"},{"text":"installed, as this is basically always what you want.","type":"text"}]},{"inlineContent":[{"type":"text","text":"One example of when you might use this is when the arguments to the"},{"text":" ","type":"text"},{"text":"signal are difficult to compute. A class implementor may opt to not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"emit the signal if no one is attached anyway, thus saving the cost"},{"type":"text","text":" "},{"text":"of building the arguments.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://GLibObject/documentation/GLibObject/ObjectProtocol/signalHasHandlerPending(signalID:detail:mayBeBlocked:)":{"kind":"symbol","title":"signalHasHandlerPending(signalID:detail:mayBeBlocked:)","url":"\/documentation\/glibobject\/objectprotocol\/signalhashandlerpending(signalid:detail:maybeblocked:)","role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol\/signalHasHandlerPending(signalID:detail:mayBeBlocked:)","type":"topic","abstract":[{"text":"Returns whether there are any handlers connected to ","type":"text"},{"type":"codeVoice","code":"instance"},{"type":"text","text":" for the"},{"text":" ","type":"text"},{"text":"given signal id and detail.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signalHasHandlerPending"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signalID"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"detail","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GQuark","preciseIdentifier":"c:@T@GQuark"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mayBeBlocked"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/ObjectProtocol":{"navigatorTitle":[{"text":"ObjectProtocol","kind":"identifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","type":"topic","title":"ObjectProtocol","kind":"symbol","url":"\/documentation\/glibobject\/objectprotocol","role":"symbol","abstract":[{"text":"The base object type.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObjectProtocol","kind":"identifier"}]}}}