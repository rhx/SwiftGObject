{"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol","doc:\/\/GLibObject\/4GLib14PointerWrapperP","doc:\/\/GLibObject\/documentation\/GLibObject\/GWeakCapturing","doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"navigatorTitle":[{"text":"BindingRef","kind":"identifier"}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingRef","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:10GLibObject10BindingRefV","role":"symbol","title":"BindingRef","modules":[{"name":"GLibObject"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingRef"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Whenever the source property changes, the same value is applied to the"},{"type":"text","text":" "},{"text":"target property; for instance, the following binding:","type":"text"}]},{"code":["  g_object_bind_property (object1, \"property-a\",","                          object2, \"property-b\",","                          G_BINDING_DEFAULT);"],"type":"codeListing","syntax":"c"},{"type":"paragraph","inlineContent":[{"type":"text","text":"will cause the property named “property-b” of "},{"type":"codeVoice","code":"object2"},{"type":"text","text":" to be updated"},{"text":" ","type":"text"},{"type":"text","text":"every time [method"},{"type":"codeVoice","code":"GObject.set"},{"type":"text","text":"] or the specific accessor changes the value of"},{"text":" ","type":"text"},{"type":"text","text":"the property “property-a” of "},{"code":"object1","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to create a bidirectional binding between two properties"},{"type":"text","text":" "},{"type":"text","text":"of two "},{"code":"GObject","type":"codeVoice"},{"type":"text","text":" instances, so that if either property changes, the"},{"text":" ","type":"text"},{"type":"text","text":"other is updated as well, for instance:"}]},{"code":["  g_object_bind_property (object1, \"property-a\",","                          object2, \"property-b\",","                          G_BINDING_BIDIRECTIONAL);"],"type":"codeListing","syntax":"c"},{"type":"paragraph","inlineContent":[{"text":"will keep the two properties in sync.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"It is also possible to set a custom transformation function (in both","type":"text"},{"text":" ","type":"text"},{"text":"directions, in case of a bidirectional binding) to apply a custom","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transformation from the source value to the target value before"},{"text":" ","type":"text"},{"type":"text","text":"applying it; for instance, the following binding:"}]},{"code":["  g_object_bind_property_full (adjustment1, \"value\",","                               adjustment2, \"value\",","                               G_BINDING_BIDIRECTIONAL,","                               celsius_to_fahrenheit,","                               fahrenheit_to_celsius,","                               NULL, NULL);"],"syntax":"c","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"will keep the “value” property of the two adjustments in sync; the"},{"type":"text","text":" "},{"type":"codeVoice","code":"celsius_to_fahrenheit"},{"text":" function will be called whenever the “value”","type":"text"},{"type":"text","text":" "},{"text":"property of ","type":"text"},{"type":"codeVoice","code":"adjustment1"},{"type":"text","text":" changes and will transform the current value"},{"text":" ","type":"text"},{"type":"text","text":"of the property before applying it to the “value” property of "},{"code":"adjustment2","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"Vice versa, the ","type":"text"},{"type":"codeVoice","code":"fahrenheit_to_celsius"},{"type":"text","text":" function will be called whenever"},{"text":" ","type":"text"},{"text":"the “value” property of ","type":"text"},{"code":"adjustment2","type":"codeVoice"},{"type":"text","text":" changes, and will transform the"},{"type":"text","text":" "},{"type":"text","text":"current value of the property before applying it to the “value” property"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"adjustment1"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding","isActive":true,"type":"reference"},{"text":" does not resolve cycles by itself; a cycle like","type":"text"}]},{"syntax":null,"type":"codeListing","code":["  object1:propertyA -> object2:propertyB","  object2:propertyB -> object3:propertyC","  object3:propertyC -> object1:propertyA"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"might lead to an infinite loop. The loop, in this particular case,"},{"text":" ","type":"text"},{"type":"text","text":"can be avoided if the objects emit the "},{"type":"codeVoice","code":"GObject"},{"text":"notify","type":"text"},{"type":"codeVoice","code":" signal only if the value has effectively been changed. A binding is implemented using the `GObject`notify"},{"type":"text","text":" signal, so it is susceptible to all the"},{"text":" ","type":"text"},{"type":"text","text":"various ways of blocking a signal emission, like [func"},{"code":"GObject.signal_stop_emission","type":"codeVoice"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"or [func"},{"code":"GObject.signal_handler_block","type":"codeVoice"},{"type":"text","text":"]."}]},{"inlineContent":[{"text":"A binding will be severed, and the resources it allocates freed, whenever","type":"text"},{"text":" ","type":"text"},{"text":"either one of the ","type":"text"},{"code":"GObject","type":"codeVoice"},{"text":" instances it refers to are finalized, or when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding"},{"text":" instance loses its last reference.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Bindings for languages with garbage collection can use"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GObject.Binding.unbind"},{"type":"text","text":"] to explicitly release a binding between the source"},{"type":"text","text":" "},{"type":"text","text":"and target properties, instead of relying on the last reference on the"},{"text":" ","type":"text"},{"text":"binding, source, and target instances to drop.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef","isActive":true,"type":"reference"},{"text":" type acts as a lightweight Swift reference to an underlying ","type":"text"},{"code":"GBinding","type":"codeVoice"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol","isActive":true,"type":"reference"},{"text":" conformance.","type":"text"},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef","type":"reference","isActive":true},{"text":" only as an ","type":"text"},{"code":"unowned","type":"codeVoice"},{"text":" reference to an existing ","type":"text"},{"code":"GBinding","type":"codeVoice"},{"text":" instance.","type":"text"}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding","type":"reference","isActive":true},{"text":" (instead of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"code":"GBinding","type":"codeVoice"},{"type":"text","text":" instance."}],"type":"paragraph"}],"type":"aside","name":"Note"}]}],"abstract":[{"type":"codeVoice","code":"GObject"},{"type":"text","text":" instance (or source) and another property on another "},{"type":"codeVoice","code":"GObject"},{"text":" ","type":"text"},{"text":"instance (or target).","type":"text"}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/glibobject\/bindingref"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-4t7wl","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-76590","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-791e9","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-7vk9n","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-9r2ew","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(cPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(constPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(gconstpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(gpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(mutating:)","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/ptr"],"generated":true,"anchor":"Instance-Properties"},{"anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/unowned(_:)"],"title":"Type Methods"},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/BindingProtocol-Implementations","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/ObjectProtocol-Implementations","doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/PointerWrapper-Implementations"]}],"sections":[],"references":{"doc://GLibObject/documentation/GLibObject/BindingRef/BindingProtocol-Implementations":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/BindingProtocol-Implementations","type":"topic","title":"BindingProtocol Implementations","abstract":[],"kind":"article","url":"\/documentation\/glibobject\/bindingref\/bindingprotocol-implementations","role":"collectionGroup"},"doc://GLibObject/documentation/GLibObject/BindingProtocol/binding_ptr-9m3c1":{"kind":"symbol","type":"topic","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"binding_ptr"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"GBinding"},{"kind":"text","text":">!"}],"url":"\/documentation\/glibobject\/bindingprotocol\/binding_ptr-9m3c1","defaultImplementations":1,"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" instance."}],"title":"binding_ptr","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol\/binding_ptr-9m3c1"},"doc://GLibObject/documentation/GLibObject/BindingRef/unowned(_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unowned","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10GLibObject10BindingRefV","text":"BindingRef"}],"url":"\/documentation\/glibobject\/bindingref\/unowned(_:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/unowned(_:)","title":"unowned(_:)","role":"symbol"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(mutating:)":{"url":"\/documentation\/glibobject\/bindingref\/init(mutating:)","abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"text":"Do not use unless you know the underlying data type the pointer points to conforms to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol"},{"text":".","type":"text"}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(mutating:)","title":"init(mutating:)","type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SV","text":"UnsafeRawPointer"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(_:)-7vk9n":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-7vk9n","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"text":" data type","type":"text"}],"url":"\/documentation\/glibobject\/bindingref\/init(_:)-7vk9n","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"!(","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"GBinding"},{"text":">?)","kind":"text"}],"title":"init(_:)"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(_:)-9r2ew":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SP","text":"UnsafePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GBinding"},{"text":">)","kind":"text"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-9r2ew","url":"\/documentation\/glibobject\/bindingref\/init(_:)-9r2ew","type":"topic","kind":"symbol","title":"init(_:)","abstract":[{"text":"Designated initialiser from a constant pointer to the underlying ","type":"text"},{"code":"C","type":"codeVoice"},{"text":" data type","type":"text"}],"role":"symbol"},"doc://GLibObject/documentation/GLibObject/GWeakCapturing":{"kind":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/GWeakCapturing","navigatorTitle":[{"kind":"identifier","text":"GWeakCapturing"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GWeakCapturing"}],"type":"topic","url":"\/documentation\/glibobject\/gweakcapturing","role":"symbol","title":"GWeakCapturing","abstract":[{"text":"This protocol is used to constrain generic argument T of GWeak container for weak references. Wrappers with strong references to underlying GObjects must NOT conform to this protocol.","type":"text"}]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/ObjectProtocol":{"navigatorTitle":[{"text":"ObjectProtocol","kind":"identifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","type":"topic","title":"ObjectProtocol","kind":"symbol","url":"\/documentation\/glibobject\/objectprotocol","role":"symbol","abstract":[{"text":"The base object type.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObjectProtocol","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/BindingRef/ObjectProtocol-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/ObjectProtocol-Implementations","title":"ObjectProtocol Implementations","abstract":[],"kind":"article","url":"\/documentation\/glibobject\/bindingref\/objectprotocol-implementations"},"doc://GLibObject/documentation/GLibObject/BindingRef/PointerWrapper-Implementations":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/PointerWrapper-Implementations","abstract":[],"url":"\/documentation\/glibobject\/bindingref\/pointerwrapper-implementations","role":"collectionGroup","type":"topic","title":"PointerWrapper Implementations","kind":"article"},"doc://GLibObject/documentation/GLibObject/BindingRef/ptr":{"type":"topic","title":"ptr","abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GBinding"},{"text":" instance.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol\/binding_ptr-9m3c1","type":"reference"},{"type":"text","text":" property instead."}],"url":"\/documentation\/glibobject\/bindingref\/ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"ptr","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv","text":"UnsafeMutableRawPointer"},{"text":"!","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/ptr"},"doc://GLibObject/documentation/GLibObject/BindingProtocol":{"url":"\/documentation\/glibobject\/bindingprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BindingProtocol","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"GObject"},{"text":" instance (or source) and another property on another ","type":"text"},{"code":"GObject","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instance (or target)."}],"title":"BindingProtocol","type":"topic","role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BindingProtocol"}]},"doc://GLibObject/documentation/GLibObject/Binding":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"navigatorTitle":[{"text":"Binding","kind":"identifier"}],"abstract":[{"code":"GObject","type":"codeVoice"},{"text":" instance (or source) and another property on another ","type":"text"},{"code":"GObject","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instance (or target)."}],"role":"symbol","url":"\/documentation\/glibobject\/binding","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding","type":"topic","title":"Binding"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(_:)-4t7wl":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-4t7wl","title":"init(_:)","url":"\/documentation\/glibobject\/bindingref\/init(_:)-4t7wl","abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"code":"C","type":"codeVoice"},{"type":"text","text":" data type"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"!("},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"GBinding"},{"kind":"text","text":">?)"}],"type":"topic","kind":"symbol"},"doc://GLibObject/4GLib14PointerWrapperP":{"identifier":"doc:\/\/GLibObject\/4GLib14PointerWrapperP","type":"unresolvable","title":"GLib.PointerWrapper"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(_:)-76590":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"url":"\/documentation\/glibobject\/bindingref\/init(_:)-76590","abstract":[{"text":"Reference intialiser for a related type that implements ","type":"text"},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol","isActive":true}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-76590","title":"init(_:)","type":"topic","kind":"symbol","role":"symbol"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(constPointer:)":{"kind":"symbol","type":"topic","title":"init(constPointer:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(constPointer:)","url":"\/documentation\/glibobject\/bindingref\/init(constpointer:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"constPointer"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"text":"Unsafe typed initialiser.","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"strong"}]},"doc://GLibObject/documentation/GLibObject/BindingRef/init(cPointer:)":{"role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(cPointer:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"title":"init(cPointer:)","abstract":[{"text":"Unsafe typed initialiser.","type":"text"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol","type":"reference","isActive":true},{"type":"text","text":"."}]}],"type":"topic","url":"\/documentation\/glibobject\/bindingref\/init(cpointer:)","kind":"symbol"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(gconstpointer:)":{"abstract":[{"text":"Conditional initialiser from an optional, non-mutable ","type":"text"},{"type":"codeVoice","code":"gconstpointer"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"!("},{"text":"gconstpointer","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@T@gconstpointer","text":"gconstpointer","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(gconstpointer:)","url":"\/documentation\/glibobject\/bindingref\/init(gconstpointer:)","title":"init(gconstpointer:)","type":"topic"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(opaquePointer:)":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(opaquePointer:)","url":"\/documentation\/glibobject\/bindingref\/init(opaquepointer:)","title":"init(opaquePointer:)","abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol"},{"type":"text","text":"."}]}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"opaquePointer","kind":"externalParam"},{"kind":"text","text":": "},{"text":"OpaquePointer","kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}]},"doc://GLibObject/documentation/GLibObject/BindingRef":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingRef","kind":"identifier"}],"navigatorTitle":[{"text":"BindingRef","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"GObject"},{"text":" instance (or source) and another property on another ","type":"text"},{"code":"GObject","type":"codeVoice"},{"type":"text","text":" "},{"text":"instance (or target).","type":"text"}],"role":"symbol","url":"\/documentation\/glibobject\/bindingref","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef","type":"topic","title":"BindingRef"},"doc://GLibObject/documentation/GLibObject/BindingRef/init(gpointer:)":{"url":"\/documentation\/glibobject\/bindingref\/init(gpointer:)","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(gpointer:)","fragments":[{"text":"init","kind":"identifier"},{"text":"!(","kind":"text"},{"text":"gpointer","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:gtypes.h@T@gpointer","text":"gpointer","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"title":"init(gpointer:)","abstract":[{"text":"Conditional initialiser from an optional ","type":"text"},{"code":"gpointer","type":"codeVoice"}]},"doc://GLibObject/documentation/GLibObject/BindingRef/init(_:)-791e9":{"title":"init(_:)","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"GBinding","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"text":" data type","type":"text"}],"url":"\/documentation\/glibobject\/bindingref\/init(_:)-791e9","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingRef\/init(_:)-791e9","role":"symbol"}}}