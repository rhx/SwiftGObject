{"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/GLibObject\/4GLib14PointerWrapperP","doc:\/\/GLibObject\/documentation\/GLibObject\/GWeakCapturing","doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol"],"kind":"relationships","type":"conformsTo"}],"sections":[],"metadata":{"role":"symbol","symbolKind":"struct","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"TypeModuleRef"}],"externalID":"s:10GLibObject13TypeModuleRefV","title":"TypeModuleRef","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypeModuleRef","kind":"identifier"}],"modules":[{"name":"GLibObject"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/typemoduleref"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef"},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"abstract":[{"type":"codeVoice","code":"GTypeModule"},{"text":" provides a simple implementation of the ","type":"text"},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" "},{"text":"interface.","type":"text"}],"kind":"symbol","topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-371zq","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-3z8qk","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-4b5zs","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-4vlqa","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-92kh5","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(cPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(constPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(gconstpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(gpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(mutating:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(opaquePointer:)"],"title":"Initializers"},{"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ptr"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"title":"Type Methods","generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/unowned(_:)"]},{"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ObjectProtocol-Implementations","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/PointerWrapper-Implementations","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypeModuleProtocol-Implementations","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypePluginProtocol-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeModuleRef","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The model of "},{"code":"GTypeModule","type":"codeVoice"},{"text":" is a dynamically loaded module which","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implements some number of types and interface implementations."}]},{"type":"paragraph","inlineContent":[{"text":"When the module is loaded, it registers its types and interfaces","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using [method"},{"type":"codeVoice","code":"GObject.TypeModule.register_type"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"code":"GObject.TypeModule.add_interface","type":"codeVoice"},{"text":"].","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As long as any instances of these types and interface implementations"},{"type":"text","text":" "},{"type":"text","text":"are in use, the module is kept loaded. When the types and interfaces"},{"type":"text","text":" "},{"text":"are gone, the module may be unloaded. If the types and interfaces","type":"text"},{"text":" ","type":"text"},{"text":"become used again, the module will be reloaded. Note that the last","type":"text"},{"type":"text","text":" "},{"text":"reference cannot be released from within the module code, since that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"would lead to the callerâ€™s code being unloaded before "},{"type":"codeVoice","code":"g_object_unref()"},{"type":"text","text":" "},{"type":"text","text":"returns to it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Keeping track of whether the module should be loaded or not is done by"},{"text":" ","type":"text"},{"text":"using a use count - it starts at zero, and whenever it is greater than","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"zero, the module is loaded. The use count is maintained internally by"},{"text":" ","type":"text"},{"text":"the type system, but also can be explicitly controlled by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"code":"GObject.TypeModule.use","type":"codeVoice"},{"text":"] and [method","type":"text"},{"code":"GObject.TypeModule.unuse","type":"codeVoice"},{"type":"text","text":"]."},{"type":"text","text":" "},{"text":"Typically, when loading a module for the first type, ","type":"text"},{"code":"g_type_module_use()","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"will be used to load it so that it can initialize its types. At some later"},{"type":"text","text":" "},{"type":"text","text":"point, when the module no longer needs to be loaded except for the type"},{"type":"text","text":" "},{"text":"implementations it contains, ","type":"text"},{"code":"g_type_module_unuse()","type":"codeVoice"},{"text":" is called.","type":"text"}]},{"inlineContent":[{"type":"codeVoice","code":"GTypeModule"},{"text":" does not actually provide any implementation of module","type":"text"},{"type":"text","text":" "},{"type":"text","text":"loading and unloading. To create a particular module type you must"},{"text":" ","type":"text"},{"type":"text","text":"derive from "},{"type":"codeVoice","code":"GTypeModule"},{"text":" and implement the load and unload functions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"codeVoice","code":"GTypeModuleClass"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","isActive":true},{"text":" type acts as a lightweight Swift reference to an underlying ","type":"text"},{"type":"codeVoice","code":"GTypeModule"},{"text":" instance.","type":"text"},{"type":"text","text":" "},{"text":"It exposes methods that can operate on this data type through ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"},{"type":"text","text":" conformance."},{"text":" ","type":"text"},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"code":"GTypeModule","type":"codeVoice"},{"type":"text","text":" instance."}]},{"style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule","isActive":true,"type":"reference"},{"type":"text","text":" (instead of "},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","isActive":true},{"text":") if you want to use Automatic Reference Counting for memory management of the underlying ","type":"text"},{"code":"GTypeModule","type":"codeVoice"},{"text":" instance.","type":"text"}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://GLibObject/documentation/GLibObject/TypeModuleRef":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","type":"topic","title":"TypeModuleRef","abstract":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"code":"GTypePlugin","type":"codeVoice"},{"type":"text","text":" "},{"text":"interface.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/glibobject\/typemoduleref","navigatorTitle":[{"text":"TypeModuleRef","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeModuleRef","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(gconstpointer:)":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(gconstpointer:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"text":": ","kind":"text"},{"text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"url":"\/documentation\/glibobject\/typemoduleref\/init(gconstpointer:)","abstract":[{"text":"Conditional initialiser from an optional, non-mutable ","type":"text"},{"code":"gconstpointer","type":"codeVoice"}],"type":"topic","role":"symbol","title":"init(gconstpointer:)"},"doc://GLibObject/documentation/GLibObject/TypePluginProtocol":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol","url":"\/documentation\/glibobject\/typepluginprotocol","navigatorTitle":[{"text":"TypePluginProtocol","kind":"identifier"}],"title":"TypePluginProtocol","abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypePluginProtocol"}]},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-92kh5":{"type":"topic","title":"init(_:)","url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-92kh5","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SP","kind":"typeIdentifier","text":"UnsafePointer"},{"kind":"text","text":"<"},{"text":"GTypeModule","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-92kh5","abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"text":" data type","type":"text"}],"kind":"symbol"},"doc://GLibObject/4GLib14PointerWrapperP":{"identifier":"doc:\/\/GLibObject\/4GLib14PointerWrapperP","title":"GLib.PointerWrapper","type":"unresolvable"},"doc://GLibObject/documentation/GLibObject/TypeModule":{"navigatorTitle":[{"kind":"identifier","text":"TypeModule"}],"abstract":[{"code":"GTypeModule","type":"codeVoice"},{"type":"text","text":" provides a simple implementation of the "},{"code":"GTypePlugin","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeModule"}],"url":"\/documentation\/glibobject\/typemodule","type":"topic","title":"TypeModule","kind":"symbol"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-371zq":{"url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-371zq","title":"init(_:)","type":"topic","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-371zq","role":"symbol","abstract":[{"text":"Reference intialiser for a related type that implements ","type":"text"},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","isActive":true}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-3z8qk":{"fragments":[{"text":"init","kind":"identifier"},{"text":"!(","kind":"text"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"text":"GTypeModule","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"type":"topic","abstract":[{"text":"Conditional initialiser from an optional, non-mutable pointer to the underlying ","type":"text"},{"code":"C","type":"codeVoice"},{"type":"text","text":" data type"}],"kind":"symbol","title":"init(_:)","url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-3z8qk","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-3z8qk","role":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(gpointer:)":{"type":"topic","title":"init(gpointer:)","url":"\/documentation\/glibobject\/typemoduleref\/init(gpointer:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"text":"gpointer","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:gtypes.h@T@gpointer","kind":"typeIdentifier","text":"gpointer"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(gpointer:)","abstract":[{"text":"Conditional initialiser from an optional ","type":"text"},{"type":"codeVoice","code":"gpointer"}],"kind":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/PointerWrapper-Implementations":{"url":"\/documentation\/glibobject\/typemoduleref\/pointerwrapper-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/PointerWrapper-Implementations","kind":"article","title":"PointerWrapper Implementations"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-4vlqa":{"type":"topic","title":"init(_:)","url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-4vlqa","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypeModule"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-4vlqa","abstract":[{"text":"Conditional initialiser from an optional pointer to the underlying ","type":"text"},{"code":"C","type":"codeVoice"},{"text":" data type","type":"text"}],"kind":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/unowned(_:)":{"url":"\/documentation\/glibobject\/typemoduleref\/unowned(_:)","type":"topic","abstract":[{"text":"This factory is syntactic sugar for setting weak pointers wrapped in ","type":"text"},{"code":"GWeak<T>","type":"codeVoice"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"unowned","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10GLibObject13TypeModuleRefV","text":"TypeModuleRef"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/unowned(_:)","kind":"symbol","title":"unowned(_:)"},"doc://GLibObject/documentation/GLibObject/ObjectProtocol":{"navigatorTitle":[{"text":"ObjectProtocol","kind":"identifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","type":"topic","title":"ObjectProtocol","kind":"symbol","url":"\/documentation\/glibobject\/objectprotocol","role":"symbol","abstract":[{"text":"The base object type.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObjectProtocol","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/GWeakCapturing":{"kind":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/GWeakCapturing","navigatorTitle":[{"kind":"identifier","text":"GWeakCapturing"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GWeakCapturing"}],"type":"topic","url":"\/documentation\/glibobject\/gweakcapturing","role":"symbol","title":"GWeakCapturing","abstract":[{"text":"This protocol is used to constrain generic argument T of GWeak container for weak references. Wrappers with strong references to underlying GObjects must NOT conform to this protocol.","type":"text"}]},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol":{"type":"topic","role":"symbol","url":"\/documentation\/glibobject\/typemoduleprotocol","abstract":[{"code":"GTypeModule","type":"codeVoice"},{"text":" provides a simple implementation of the ","type":"text"},{"code":"GTypePlugin","type":"codeVoice"},{"text":" ","type":"text"},{"text":"interface.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TypeModuleProtocol"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","kind":"symbol","title":"TypeModuleProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypeModuleProtocol","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/TypeModuleProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypeModuleProtocol-Implementations","url":"\/documentation\/glibobject\/typemoduleref\/typemoduleprotocol-implementations","type":"topic","title":"TypeModuleProtocol Implementations","abstract":[],"role":"collectionGroup"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(mutating:)":{"type":"topic","title":"init(mutating:)","url":"\/documentation\/glibobject\/typemoduleref\/init(mutating:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"text":": ","kind":"text"},{"text":"UnsafeRawPointer","preciseIdentifier":"s:SV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(mutating:)","abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"},{"type":"text","text":"."}]}],"kind":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/ObjectProtocol-Implementations":{"abstract":[],"url":"\/documentation\/glibobject\/typemoduleref\/objectprotocol-implementations","kind":"article","role":"collectionGroup","title":"ObjectProtocol Implementations","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ObjectProtocol-Implementations","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(cPointer:)":{"url":"\/documentation\/glibobject\/typemoduleref\/init(cpointer:)","abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"},{"type":"text","text":"."}]}],"role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(cPointer:)","title":"init(cPointer:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"cPointer","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"kind":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/ptr":{"role":"symbol","abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"code":"GTypeModule","type":"codeVoice"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"text":"For type-safe access, use the generated, typed pointer ","type":"text"},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/type_module_ptr-lh1o","type":"reference","isActive":true},{"text":" property instead.","type":"text"}],"type":"topic","title":"ptr","url":"\/documentation\/glibobject\/typemoduleref\/ptr","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"ptr","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ptr"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/TypePluginProtocol-Implementations":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypePluginProtocol-Implementations","url":"\/documentation\/glibobject\/typemoduleref\/typepluginprotocol-implementations","kind":"article","title":"TypePluginProtocol Implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(opaquePointer:)":{"title":"init(opaquePointer:)","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"opaquePointer","kind":"externalParam"},{"kind":"text","text":": "},{"text":"OpaquePointer","kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"text":"Unsafe untyped initialiser.","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"text":"Do not use unless you know the underlying data type the pointer points to conforms to ","type":"text"},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"strong"}],"url":"\/documentation\/glibobject\/typemoduleref\/init(opaquepointer:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(opaquePointer:)","role":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-4b5zs":{"url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-4b5zs","type":"topic","abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"text":"GTypeModule","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-4b5zs","kind":"symbol","title":"init(_:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/type_module_ptr-lh1o":{"defaultImplementations":1,"kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/type_module_ptr-lh1o","abstract":[{"text":"Typed pointer to the underlying ","type":"text"},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/type_module_ptr-lh1o","required":true,"role":"symbol","title":"type_module_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"type_module_ptr","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"text":"GTypeModule","kind":"typeIdentifier"},{"text":">!","kind":"text"}]},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(constPointer:)":{"type":"topic","title":"init(constPointer:)","url":"\/documentation\/glibobject\/typemoduleref\/init(constpointer:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"text":": ","kind":"text"},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(constPointer:)","abstract":[{"text":"Unsafe typed initialiser.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"text":"Do not use unless you know the underlying data type the pointer points to conforms to ","type":"text"},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","type":"reference","isActive":true},{"text":".","type":"text"}]}],"kind":"symbol"}}}