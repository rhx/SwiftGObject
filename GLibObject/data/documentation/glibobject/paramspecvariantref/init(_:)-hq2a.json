{"metadata":{"extendedModule":"GLibObject","symbolKind":"init","title":"init(_:)","modules":[{"name":"GLibObject"}],"externalID":"s:10GLibObject19ParamSpecVariantRefVyACSgSPySo07_GParamdE0VGSgcfc","role":"symbol","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"!(","kind":"text"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GParamSpecVariant"},{"text":">?)","kind":"text"}]},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ParamSpecVariantRef"]]},"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ParamSpecVariantRef\/init(_:)-hq2a","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"!(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"maybePointer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UnsafePointer","preciseIdentifier":"s:SP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"GParamSpecVariant","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"abstract":[{"text":"Conditional initialiser from an optional, non-mutable pointer to the underlying ","type":"text"},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/paramspecvariantref\/init(_:)-hq2a"]}],"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/ParamSpecVariantRef":{"abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ParamSpec","isActive":true},{"type":"text","text":" derived structure that contains the meta data for [Variant](\/\/documentation\/glib\/variant properties."}],"url":"\/documentation\/glibobject\/paramspecvariantref","role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ParamSpecVariantRef","title":"ParamSpecVariantRef","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParamSpecVariantRef","kind":"identifier"}],"navigatorTitle":[{"text":"ParamSpecVariantRef","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://GLibObject/documentation/GLibObject/ParamSpecVariantRef/init(_:)-hq2a":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP"},{"text":"<","kind":"text"},{"text":"GParamSpecVariant","kind":"typeIdentifier"},{"kind":"text","text":">?)"}],"kind":"symbol","title":"init(_:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ParamSpecVariantRef\/init(_:)-hq2a","type":"topic","abstract":[{"text":"Conditional initialiser from an optional, non-mutable pointer to the underlying ","type":"text"},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"url":"\/documentation\/glibobject\/paramspecvariantref\/init(_:)-hq2a"},"doc://GLibObject/documentation/GLibObject/ParamSpec":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ParamSpec","kind":"symbol","abstract":[{"code":"GParamSpec","type":"codeVoice"},{"type":"text","text":" encapsulates the metadata required to specify parameters, such as "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" properties."}],"navigatorTitle":[{"text":"ParamSpec","kind":"identifier"}],"role":"symbol","title":"ParamSpec","type":"topic","url":"\/documentation\/glibobject\/paramspec","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ParamSpec","kind":"identifier"}]}}}