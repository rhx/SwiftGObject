{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/typeGetTypeRegistrationSerial()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"typeGetTypeRegistrationSerial","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Returns an opaque serial number that represents the state of the set"},{"text":" ","type":"text"},{"text":"of registered types. Any time a type is registered this serial changes,","type":"text"},{"type":"text","text":" "},{"text":"which means you can cache information based on type lookups (such as","type":"text"},{"text":" ","type":"text"},{"code":"g_type_from_name()","type":"codeVoice"},{"type":"text","text":") and know if the cache is still valid at a later"},{"type":"text","text":" "},{"type":"text","text":"time by comparing the current serial with the one at the type lookup."}],"variants":[{"paths":["\/documentation\/glibobject\/typegettyperegistrationserial()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeGetTypeRegistrationSerial"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"title":"typeGetTypeRegistrationSerial()","externalID":"s:10GLibObject29typeGetTypeRegistrationSerialSiyF","role":"symbol","roleHeading":"Function","symbolKind":"func","modules":[{"name":"GLibObject"}]},"references":{"doc://GLibObject/documentation/GLibObject/typeGetTypeRegistrationSerial()":{"kind":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/typeGetTypeRegistrationSerial()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"typeGetTypeRegistrationSerial","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"url":"\/documentation\/glibobject\/typegettyperegistrationserial()","abstract":[{"type":"text","text":"Returns an opaque serial number that represents the state of the set"},{"type":"text","text":" "},{"type":"text","text":"of registered types. Any time a type is registered this serial changes,"},{"type":"text","text":" "},{"type":"text","text":"which means you can cache information based on type lookups (such as"},{"type":"text","text":" "},{"code":"g_type_from_name()","type":"codeVoice"},{"text":") and know if the cache is still valid at a later","type":"text"},{"type":"text","text":" "},{"text":"time by comparing the current serial with the one at the type lookup.","type":"text"}],"type":"topic","title":"typeGetTypeRegistrationSerial()","role":"symbol"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"}}}