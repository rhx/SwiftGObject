{"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","modules":[{"name":"GLibObject"}],"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"GParameter","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"roleHeading":"Initializer","externalID":"s:10GLibObject9ParameterC9retainingACSpySo11_GParameterVG_tcfc","title":"init(retaining:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/Parameter"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/Parameter\/init(retaining:)"},"variants":[{"paths":["\/documentation\/glibobject\/parameter\/init(retaining:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"retaining","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"op"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"GParameter"},{"text":">)","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Pointer to the underlying object"}],"type":"paragraph"}],"name":"op"}],"kind":"parameters"}],"kind":"symbol","abstract":[{"text":"Designated initialiser from the underlying ","type":"text"},{"type":"codeVoice","code":"C"},{"text":" data type.","type":"text"},{"text":" ","type":"text"},{"code":"GParameter","type":"codeVoice"},{"text":" does not allow reference counting, so despite the name no actual retaining will occur.","type":"text"},{"type":"text","text":" "},{"text":"i.e., ownership is transferred to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Parameter","isActive":true},{"type":"text","text":" instance."}],"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/Parameter/init(retaining:)":{"role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Parameter\/init(retaining:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"retaining","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"GParameter","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"type":"topic","url":"\/documentation\/glibobject\/parameter\/init(retaining:)","kind":"symbol","abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"text":" data type.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"GParameter"},{"text":" does not allow reference counting, so despite the name no actual retaining will occur.","type":"text"},{"text":" ","type":"text"},{"text":"i.e., ownership is transferred to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Parameter"},{"text":" instance.","type":"text"}],"title":"init(retaining:)"},"doc://GLibObject/documentation/GLibObject/Parameter":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Parameter","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"title":"Parameter","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parameter","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"The GParameter struct is an auxiliary structure used","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to hand parameter name\/value pairs to "},{"type":"codeVoice","code":"g_object_newv()"},{"type":"text","text":"."}],"url":"\/documentation\/glibobject\/parameter"}}}