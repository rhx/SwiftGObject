{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueRef","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueRef\/ValueProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/valueref\/setobjecttakeownership(vobject:)"]}],"abstract":[{"text":"This is an internal function introduced mainly for C marshallers.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setObjectTakeOwnership","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"vObject"},{"text":": ","kind":"text"},{"text":"gpointer","kind":"typeIdentifier","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"text":"? = nil)","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Set_object_take_ownership is deprecated:","type":"text"}],"type":"strong"},{"type":"text","text":" "},{"type":"text","text":"Use g_value_take_object() instead."}]}],"kind":"content"}],"sections":[],"metadata":{"symbolKind":"method","platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setObjectTakeOwnership","kind":"identifier"},{"kind":"text","text":"("},{"text":"vObject","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"text":"?)","kind":"text"}],"title":"setObjectTakeOwnership(vObject:)","extendedModule":"GLibObject","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"GLibObject"}],"externalID":"s:10GLibObject13ValueProtocolPAAE03setB13TakeOwnership01vB0ySvSg_tF::SYNTHESIZED::s:10GLibObject8ValueRefV"},"kind":"symbol","identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueRef\/setObjectTakeOwnership(vObject:)","interfaceLanguage":"swift"},"references":{"doc://GLibObject/documentation/GLibObject/ValueRef/setObjectTakeOwnership(vObject:)":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueRef\/setObjectTakeOwnership(vObject:)","title":"setObjectTakeOwnership(vObject:)","role":"symbol","type":"topic","url":"\/documentation\/glibobject\/valueref\/setobjecttakeownership(vobject:)","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"This is an internal function introduced mainly for C marshallers."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setObjectTakeOwnership"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"vObject"},{"kind":"text","text":": "},{"text":"gpointer","kind":"typeIdentifier","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"text":"?)","kind":"text"}]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/ValueRef":{"abstract":[{"type":"text","text":"An opaque structure used to hold different types of values."}],"type":"topic","kind":"symbol","title":"ValueRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueRef"}],"url":"\/documentation\/glibobject\/valueref","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValueRef"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueRef"},"doc://GLibObject/documentation/GLibObject/ValueRef/ValueProtocol-Implementations":{"title":"ValueProtocol Implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/glibobject\/valueref\/valueprotocol-implementations","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueRef\/ValueProtocol-Implementations"}}}