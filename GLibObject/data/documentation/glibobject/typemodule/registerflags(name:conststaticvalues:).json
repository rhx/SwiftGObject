{"sections":[],"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"registerFlags"},{"text":"<","kind":"text"},{"text":"FlagsValueT","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SP","text":"UnsafePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"gchar","kind":"typeIdentifier","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"constStaticValues"},{"kind":"text","text":": "},{"text":"FlagsValueT","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@GType","text":"GType"}],"title":"registerFlags(name:constStaticValues:)","externalID":"s:10GLibObject18TypeModuleProtocolPAAE13registerFlags4name17constStaticValuesSuSPys4Int8VGSg_qd__tAA0g5ValueE0Rd__lF::SYNTHESIZED::s:10GLibObject10TypeModuleC","modules":[{"name":"GLibObject"}],"extendedModule":"GLibObject","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/typemodule\/registerflags(name:conststaticvalues:)"]}],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule\/TypeModuleProtocol-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule\/registerFlags(name:constStaticValues:)","interfaceLanguage":"swift"},"abstract":[{"text":"Looks up or registers a flags type that is implemented with a particular","type":"text"},{"text":" ","type":"text"},{"text":"type plugin. If a type with name ","type":"text"},{"code":"type_name","type":"codeVoice"},{"text":" was previously registered,","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Type","type":"codeVoice"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"text":" ","type":"text"},{"text":"is newly registered, and the resulting ","type":"text"},{"type":"codeVoice","code":"Type"},{"text":" identifier returned.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"registerFlags","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"FlagsValueT"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"preciseIdentifier":"c:@T@gchar","text":"gchar","kind":"typeIdentifier"},{"text":">!, ","kind":"text"},{"text":"constStaticValues","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FlagsValueT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"FlagsValueT"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/FlagsValueProtocol","preciseIdentifier":"s:10GLibObject18FlagsValueProtocolP","text":"FlagsValueProtocol","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"As long as any instances of the type exist, the type plugin will","type":"text"},{"type":"text","text":" "},{"text":"not be unloaded.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Since 2.56 if "},{"code":"module","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" this will call ","type":"text"},{"code":"g_type_register_static()","type":"codeVoice"},{"text":" ","type":"text"},{"text":"instead. This can be used when making a static build of the module.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeModule/registerFlags(name:constStaticValues:)":{"type":"topic","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule\/registerFlags(name:constStaticValues:)","kind":"symbol","url":"\/documentation\/glibobject\/typemodule\/registerflags(name:conststaticvalues:)","title":"registerFlags(name:constStaticValues:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerFlags","kind":"identifier"},{"kind":"text","text":"<"},{"text":"FlagsValueT","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SP","kind":"typeIdentifier","text":"UnsafePointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"constStaticValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagsValueT"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@T@GType","kind":"typeIdentifier","text":"GType"}],"role":"symbol","abstract":[{"type":"text","text":"Looks up or registers a flags type that is implemented with a particular"},{"text":" ","type":"text"},{"text":"type plugin. If a type with name ","type":"text"},{"type":"codeVoice","code":"type_name"},{"type":"text","text":" was previously registered,"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Type","type":"codeVoice"},{"text":" identifier for the type is returned, otherwise the type","type":"text"},{"text":" ","type":"text"},{"text":"is newly registered, and the resulting ","type":"text"},{"code":"Type","type":"codeVoice"},{"type":"text","text":" identifier returned."}]},"doc://GLibObject/documentation/GLibObject/TypeModule":{"navigatorTitle":[{"kind":"identifier","text":"TypeModule"}],"abstract":[{"code":"GTypeModule","type":"codeVoice"},{"type":"text","text":" provides a simple implementation of the "},{"code":"GTypePlugin","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeModule"}],"url":"\/documentation\/glibobject\/typemodule","type":"topic","title":"TypeModule","kind":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModule/TypeModuleProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule\/TypeModuleProtocol-Implementations","title":"TypeModuleProtocol Implementations","abstract":[],"type":"topic","url":"\/documentation\/glibobject\/typemodule\/typemoduleprotocol-implementations","role":"collectionGroup"},"doc://GLibObject/documentation/GLibObject/FlagsValueProtocol":{"url":"\/documentation\/glibobject\/flagsvalueprotocol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagsValueProtocol"}],"title":"FlagsValueProtocol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlagsValueProtocol"}],"role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/FlagsValueProtocol","abstract":[{"type":"text","text":"A structure which contains a single flags value, its name, and its"},{"type":"text","text":" "},{"type":"text","text":"nickname."}]}}}