{"metadata":{"extendedModule":"GLibObject","role":"symbol","modules":[{"name":"GLibObject"}],"title":"init(mutating:)","roleHeading":"Initializer","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SV","text":"UnsafeRawPointer"},{"kind":"text","text":")"}],"externalID":"s:10GLibObject13TypePluginRefV8mutatingACSV_tcfc"},"abstract":[{"text":"Unsafe untyped initialiser.","type":"text"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol","isActive":true},{"text":".","type":"text"}]}],"variants":[{"paths":["\/documentation\/glibobject\/typepluginref\/init(mutating:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"mutating"},{"text":" ","kind":"text"},{"text":"raw","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SV","kind":"typeIdentifier","text":"UnsafeRawPointer"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginRef\/init(mutating:)"},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginRef"]]},"references":{"doc://GLibObject/documentation/GLibObject/TypePluginRef":{"title":"TypePluginRef","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginRef","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypePluginRef","kind":"identifier"}],"abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"type":"topic","kind":"symbol","url":"\/documentation\/glibobject\/typepluginref","role":"symbol","navigatorTitle":[{"text":"TypePluginRef","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/TypePluginRef/init(mutating:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Unsafe untyped initialiser.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol","isActive":true},{"type":"text","text":"."}]}],"role":"symbol","title":"init(mutating:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginRef\/init(mutating:)","url":"\/documentation\/glibobject\/typepluginref\/init(mutating:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"mutating"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SV","text":"UnsafeRawPointer"},{"kind":"text","text":")"}]},"doc://GLibObject/documentation/GLibObject/TypePluginProtocol":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol","url":"\/documentation\/glibobject\/typepluginprotocol","navigatorTitle":[{"text":"TypePluginProtocol","kind":"identifier"}],"title":"TypePluginProtocol","abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypePluginProtocol"}]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"}}}