{"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypeModuleProtocol-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"registerType"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"TypeInfoT"},{"text":">(","kind":"text"},{"text":"parentType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@GType","text":"GType"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"typeName"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"text":"gchar","kind":"typeIdentifier","preciseIdentifier":"c:@T@gchar"},{"text":">!, ","kind":"text"},{"kind":"externalParam","text":"typeInfo"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TypeInfoT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"text":": ","kind":"text"},{"text":"TypeFlags","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeFlags","preciseIdentifier":"s:10GLibObject9TypeFlagsV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@GType","text":"GType"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"TypeInfoT","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeInfoProtocol","preciseIdentifier":"s:10GLibObject16TypeInfoProtocolP","text":"TypeInfoProtocol"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When reregistering a type (typically because a module is unloaded"},{"text":" ","type":"text"},{"type":"text","text":"then reloaded, and reinitialized), "},{"type":"codeVoice","code":"module"},{"type":"text","text":" and "},{"code":"parentType","type":"codeVoice"},{"type":"text","text":" must"},{"type":"text","text":" "},{"type":"text","text":"be the same as they were previously."}]},{"inlineContent":[{"type":"text","text":"As long as any instances of the type exist, the type plugin will"},{"type":"text","text":" "},{"text":"not be unloaded.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Since 2.56 if ","type":"text"},{"code":"module","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" this will call "},{"code":"g_type_register_static()","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instead. This can be used when making a static build of the module."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Looks up or registers a type that is implemented with a particular"},{"type":"text","text":" "},{"text":"type plugin. If a type with name ","type":"text"},{"type":"codeVoice","code":"typeName"},{"type":"text","text":" was previously registered,"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"Type"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"text":" ","type":"text"},{"type":"text","text":"is newly registered, and the resulting "},{"code":"Type","type":"codeVoice"},{"type":"text","text":" identifier returned."}],"metadata":{"externalID":"s:10GLibObject18TypeModuleProtocolPAAE08registerC006parentC08typeName0H4Info5flagsS2u_SPys4Int8VGSgqd__AA0C5FlagsVtAA0cjE0Rd__lF::SYNTHESIZED::s:10GLibObject13TypeModuleRefV","title":"registerType(parentType:typeName:typeInfo:flags:)","roleHeading":"Instance Method","role":"symbol","extendedModule":"GLibObject","modules":[{"name":"GLibObject"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerType"},{"text":"<","kind":"text"},{"text":"TypeInfoT","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"parentType"},{"text":": ","kind":"text"},{"text":"GType","preciseIdentifier":"c:@T@GType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"typeName"},{"kind":"text","text":": "},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"preciseIdentifier":"c:@T@gchar","text":"gchar","kind":"typeIdentifier"},{"text":">!, ","kind":"text"},{"text":"typeInfo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TypeInfoT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TypeFlags","preciseIdentifier":"s:10GLibObject9TypeFlagsV"},{"text":") -> ","kind":"text"},{"text":"GType","preciseIdentifier":"c:@T@GType","kind":"typeIdentifier"}]},"kind":"symbol","identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/registerType(parentType:typeName:typeInfo:flags:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/typemoduleref\/registertype(parenttype:typename:typeinfo:flags:)"]}],"sections":[],"references":{"doc://GLibObject/documentation/GLibObject/TypeInfoProtocol":{"kind":"symbol","url":"\/documentation\/glibobject\/typeinfoprotocol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeInfoProtocol"}],"abstract":[{"text":"This structure is used to provide the type system with the information","type":"text"},{"type":"text","text":" "},{"type":"text","text":"required to initialize and destruct (finalize) a typeâ€™s class and"},{"type":"text","text":" "},{"text":"its instances.","type":"text"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeInfoProtocol","title":"TypeInfoProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeInfoProtocol"}]},"doc://GLibObject/documentation/GLibObject/TypeModuleRef":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","type":"topic","title":"TypeModuleRef","abstract":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"code":"GTypePlugin","type":"codeVoice"},{"type":"text","text":" "},{"text":"interface.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/glibobject\/typemoduleref","navigatorTitle":[{"text":"TypeModuleRef","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeModuleRef","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeFlags":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeFlags","title":"TypeFlags","url":"\/documentation\/glibobject\/typeflags","role":"symbol","abstract":[{"type":"text","text":"Bit masks used to check or determine characteristics of a type."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypeFlags","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"TypeFlags","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/registerType(parentType:typeName:typeInfo:flags:)":{"title":"registerType(parentType:typeName:typeInfo:flags:)","kind":"symbol","role":"symbol","url":"\/documentation\/glibobject\/typemoduleref\/registertype(parenttype:typename:typeinfo:flags:)","abstract":[{"type":"text","text":"Looks up or registers a type that is implemented with a particular"},{"type":"text","text":" "},{"text":"type plugin. If a type with name ","type":"text"},{"type":"codeVoice","code":"typeName"},{"type":"text","text":" was previously registered,"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"Type"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"type":"text","text":" "},{"text":"is newly registered, and the resulting ","type":"text"},{"code":"Type","type":"codeVoice"},{"text":" identifier returned.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"registerType","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TypeInfoT","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"parentType","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@T@GType","text":"GType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"typeName","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SP","text":"UnsafePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@gchar","text":"gchar"},{"text":">!, ","kind":"text"},{"kind":"externalParam","text":"typeInfo"},{"text":": ","kind":"text"},{"text":"TypeInfoT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"flags"},{"text":": ","kind":"text"},{"text":"TypeFlags","kind":"typeIdentifier","preciseIdentifier":"s:10GLibObject9TypeFlagsV"},{"text":") -> ","kind":"text"},{"text":"GType","preciseIdentifier":"c:@T@GType","kind":"typeIdentifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/registerType(parentType:typeName:typeInfo:flags:)","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/TypeModuleProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypeModuleProtocol-Implementations","url":"\/documentation\/glibobject\/typemoduleref\/typemoduleprotocol-implementations","type":"topic","title":"TypeModuleProtocol Implementations","abstract":[],"role":"collectionGroup"}}}