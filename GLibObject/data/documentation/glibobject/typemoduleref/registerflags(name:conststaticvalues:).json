{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerFlags","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"FlagsValueT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"UnsafePointer","preciseIdentifier":"s:SP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"c:@T@gchar","kind":"typeIdentifier","text":"gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"constStaticValues"},{"text":": ","kind":"text"},{"text":"FlagsValueT","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"GType","kind":"typeIdentifier","preciseIdentifier":"c:@T@GType"}],"extendedModule":"GLibObject","title":"registerFlags(name:constStaticValues:)","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"GLibObject"}],"externalID":"s:10GLibObject18TypeModuleProtocolPAAE13registerFlags4name17constStaticValuesSuSPys4Int8VGSg_qd__tAA0g5ValueE0Rd__lF::SYNTHESIZED::s:10GLibObject13TypeModuleRefV"},"variants":[{"paths":["\/documentation\/glibobject\/typemoduleref\/registerflags(name:conststaticvalues:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypeModuleProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/registerFlags(name:constStaticValues:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Looks up or registers a flags type that is implemented with a particular"},{"text":" ","type":"text"},{"type":"text","text":"type plugin. If a type with name "},{"type":"codeVoice","code":"type_name"},{"type":"text","text":" was previously registered,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"Type","type":"codeVoice"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"type":"text","text":" "},{"type":"text","text":"is newly registered, and the resulting "},{"type":"codeVoice","code":"Type"},{"type":"text","text":" identifier returned."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"registerFlags","kind":"identifier"},{"kind":"text","text":"<"},{"text":"FlagsValueT","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP"},{"text":"<","kind":"text"},{"text":"gchar","preciseIdentifier":"c:@T@gchar","kind":"typeIdentifier"},{"text":">!, ","kind":"text"},{"text":"constStaticValues","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagsValueT"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@T@GType","text":"GType","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"FlagsValueT"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/FlagsValueProtocol","preciseIdentifier":"s:10GLibObject18FlagsValueProtocolP","text":"FlagsValueProtocol","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"As long as any instances of the type exist, the type plugin will"},{"type":"text","text":" "},{"text":"not be unloaded.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Since 2.56 if ","type":"text"},{"code":"module","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" this will call "},{"type":"codeVoice","code":"g_type_register_static()"},{"text":" ","type":"text"},{"type":"text","text":"instead. This can be used when making a static build of the module."}]}],"kind":"content"}],"references":{"doc://GLibObject/documentation/GLibObject/TypeModuleRef/registerFlags(name:constStaticValues:)":{"url":"\/documentation\/glibobject\/typemoduleref\/registerflags(name:conststaticvalues:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"registerFlags","kind":"identifier"},{"text":"<","kind":"text"},{"text":"FlagsValueT","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"UnsafePointer","preciseIdentifier":"s:SP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"gchar","kind":"typeIdentifier","preciseIdentifier":"c:@T@gchar"},{"text":">!, ","kind":"text"},{"kind":"externalParam","text":"constStaticValues"},{"text":": ","kind":"text"},{"text":"FlagsValueT","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@GType","text":"GType"}],"type":"topic","abstract":[{"text":"Looks up or registers a flags type that is implemented with a particular","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type plugin. If a type with name "},{"type":"codeVoice","code":"type_name"},{"text":" was previously registered,","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"Type"},{"text":" identifier for the type is returned, otherwise the type","type":"text"},{"type":"text","text":" "},{"text":"is newly registered, and the resulting ","type":"text"},{"type":"codeVoice","code":"Type"},{"type":"text","text":" identifier returned."}],"kind":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/registerFlags(name:constStaticValues:)","role":"symbol","title":"registerFlags(name:constStaticValues:)"},"doc://GLibObject/documentation/GLibObject/FlagsValueProtocol":{"url":"\/documentation\/glibobject\/flagsvalueprotocol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagsValueProtocol"}],"title":"FlagsValueProtocol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlagsValueProtocol"}],"role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/FlagsValueProtocol","abstract":[{"type":"text","text":"A structure which contains a single flags value, its name, and its"},{"type":"text","text":" "},{"type":"text","text":"nickname."}]},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/TypeModuleProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypeModuleProtocol-Implementations","url":"\/documentation\/glibobject\/typemoduleref\/typemoduleprotocol-implementations","type":"topic","title":"TypeModuleProtocol Implementations","abstract":[],"role":"collectionGroup"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","type":"topic","title":"TypeModuleRef","abstract":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"code":"GTypePlugin","type":"codeVoice"},{"type":"text","text":" "},{"text":"interface.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/glibobject\/typemoduleref","navigatorTitle":[{"text":"TypeModuleRef","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeModuleRef","kind":"identifier"}]}}}