{"metadata":{"title":"signalHandlerUnblock(handlerID:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"signalHandlerUnblock","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handlerID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:10GLibObject0B8ProtocolPAAE20signalHandlerUnblock9handlerIDySi_tF::SYNTHESIZED::s:10GLibObject13TypeModuleRefV","modules":[{"name":"GLibObject"}],"extendedModule":"GLibObject","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/typemoduleref\/signalhandlerunblock(handlerid:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signalHandlerUnblock"},{"kind":"text","text":"("},{"text":"handlerID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"handlerID"},{"text":" has to be a valid id of a signal handler that is","type":"text"},{"text":" ","type":"text"},{"text":"connected to a signal of ","type":"text"},{"code":"instance","type":"codeVoice"},{"type":"text","text":" and is currently blocked."}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ObjectProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Undoes the effect of a previous "},{"code":"g_signal_handler_block()","type":"codeVoice"},{"text":" call.  A","type":"text"},{"type":"text","text":" "},{"type":"text","text":"blocked handler is skipped during signal emissions and will not be"},{"type":"text","text":" "},{"text":"invoked, unblocking it (for exactly the amount of times it has been","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"blocked before) reverts its “blocked” state, so the handler will be"},{"type":"text","text":" "},{"type":"text","text":"recognized by the signal system and is called upon future or"},{"text":" ","type":"text"},{"text":"currently ongoing signal emissions (since the order in which","type":"text"},{"text":" ","type":"text"},{"text":"handlers are called during signal emissions is deterministic,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whether the unblocked handler in question is called as part of a"},{"type":"text","text":" "},{"type":"text","text":"currently ongoing emission depends on how far that emission has"},{"type":"text","text":" "},{"type":"text","text":"proceeded yet)."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/signalHandlerUnblock(handlerID:)"},"sections":[],"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/signalHandlerUnblock(handlerID:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"signalHandlerUnblock","kind":"identifier"},{"kind":"text","text":"("},{"text":"handlerID","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"type":"topic","title":"signalHandlerUnblock(handlerID:)","kind":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/signalHandlerUnblock(handlerID:)","abstract":[{"type":"text","text":"Undoes the effect of a previous "},{"code":"g_signal_handler_block()","type":"codeVoice"},{"text":" call.  A","type":"text"},{"type":"text","text":" "},{"type":"text","text":"blocked handler is skipped during signal emissions and will not be"},{"text":" ","type":"text"},{"text":"invoked, unblocking it (for exactly the amount of times it has been","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"blocked before) reverts its “blocked” state, so the handler will be"},{"text":" ","type":"text"},{"text":"recognized by the signal system and is called upon future or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"currently ongoing signal emissions (since the order in which"},{"text":" ","type":"text"},{"type":"text","text":"handlers are called during signal emissions is deterministic,"},{"type":"text","text":" "},{"type":"text","text":"whether the unblocked handler in question is called as part of a"},{"type":"text","text":" "},{"type":"text","text":"currently ongoing emission depends on how far that emission has"},{"text":" ","type":"text"},{"text":"proceeded yet).","type":"text"}],"url":"\/documentation\/glibobject\/typemoduleref\/signalhandlerunblock(handlerid:)","role":"symbol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","type":"topic","title":"TypeModuleRef","abstract":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"code":"GTypePlugin","type":"codeVoice"},{"type":"text","text":" "},{"text":"interface.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/glibobject\/typemoduleref","navigatorTitle":[{"text":"TypeModuleRef","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeModuleRef","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/ObjectProtocol-Implementations":{"abstract":[],"url":"\/documentation\/glibobject\/typemoduleref\/objectprotocol-implementations","kind":"article","role":"collectionGroup","title":"ObjectProtocol Implementations","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ObjectProtocol-Implementations","type":"topic"}}}