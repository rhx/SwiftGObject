{"metadata":{"extendedModule":"GLibObject","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setObjectTakeOwnership"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"vObject"},{"text":": ","kind":"text"},{"text":"gpointer","kind":"typeIdentifier","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"symbolKind":"method","roleHeading":"Instance Method","title":"setObjectTakeOwnership(vObject:)","modules":[{"name":"GLibObject"}],"role":"symbol","externalID":"s:10GLibObject13ValueProtocolPAAE03setB13TakeOwnership01vB0ySvSg_tF::SYNTHESIZED::s:10GLibObject9ValueBaseC","platforms":[]},"abstract":[{"type":"text","text":"This is an internal function introduced mainly for C marshallers."}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/setObjectTakeOwnership(vObject:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/valuebase\/setobjecttakeownership(vobject:)"]}],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/ValueProtocol-Implementations"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"setObjectTakeOwnership"},{"text":"(","kind":"text"},{"text":"vObject","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:gtypes.h@T@gpointer","text":"gpointer","kind":"typeIdentifier"},{"kind":"text","text":"? = nil)"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Set_object_take_ownership is deprecated:","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"Use g_value_take_object() instead."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://GLibObject/documentation/GLibObject/ValueBase":{"type":"topic","url":"\/documentation\/glibobject\/valuebase","role":"symbol","abstract":[{"text":"An opaque structure used to hold different types of values.","type":"text"}],"kind":"symbol","title":"ValueBase","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBase","kind":"identifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase","navigatorTitle":[{"kind":"identifier","text":"ValueBase"}]},"doc://GLibObject/documentation/GLibObject/ValueBase/ValueProtocol-Implementations":{"type":"topic","url":"\/documentation\/glibobject\/valuebase\/valueprotocol-implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"ValueProtocol Implementations","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/ValueProtocol-Implementations"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/ValueBase/setObjectTakeOwnership(vObject:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setObjectTakeOwnership"},{"kind":"text","text":"("},{"kind":"externalParam","text":"vObject"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"role":"symbol","url":"\/documentation\/glibobject\/valuebase\/setobjecttakeownership(vobject:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/setObjectTakeOwnership(vObject:)","deprecated":true,"kind":"symbol","type":"topic","title":"setObjectTakeOwnership(vObject:)","abstract":[{"type":"text","text":"This is an internal function introduced mainly for C marshallers."}]}}}