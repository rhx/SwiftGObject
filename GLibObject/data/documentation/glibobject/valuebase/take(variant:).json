{"sections":[],"abstract":[{"type":"text","text":"Set the contents of a variant "},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Value","isActive":true},{"text":" to ","type":"text"},{"type":"codeVoice","code":"variant"},{"text":", and takes over","type":"text"},{"text":" ","type":"text"},{"text":"the ownership of the caller’s reference to ","type":"text"},{"type":"codeVoice","code":"variant"},{"type":"text","text":";"},{"type":"text","text":" "},{"type":"text","text":"the caller doesn’t have to unref it any more (i.e. the reference"},{"text":" ","type":"text"},{"type":"text","text":"count of the variant is not increased)."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/valuebase\/take(variant:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"take"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"variant"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:4GLib10VariantRefV","text":"VariantRef"},{"kind":"text","text":"? = nil)"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"variant","type":"codeVoice"},{"text":" was floating then its floating reference is converted to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a hard reference."}]},{"inlineContent":[{"type":"text","text":"If you want the "},{"isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Value","type":"reference"},{"type":"text","text":" to hold its own reference to "},{"type":"codeVoice","code":"variant"},{"text":", use","type":"text"},{"text":" ","type":"text"},{"code":"g_value_set_variant()","type":"codeVoice"},{"type":"text","text":" instead."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is an internal function introduced mainly for C marshallers."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"variant"},{"text":": ","kind":"text"},{"text":"VariantRef","kind":"typeIdentifier","preciseIdentifier":"s:4GLib10VariantRefV"},{"text":"?)","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"GLibObject"}],"externalID":"s:10GLibObject13ValueProtocolPAAE4take7varianty0A010VariantRefVSg_tF::SYNTHESIZED::s:10GLibObject9ValueBaseC","title":"take(variant:)","role":"symbol","extendedModule":"GLibObject"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/ValueProtocol-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/take(variant:)"},"references":{"doc://GLibObject/documentation/GLibObject/ValueBase/ValueProtocol-Implementations":{"type":"topic","url":"\/documentation\/glibobject\/valuebase\/valueprotocol-implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"ValueProtocol Implementations","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/ValueProtocol-Implementations"},"doc://GLibObject/documentation/GLibObject/Value":{"navigatorTitle":[{"kind":"identifier","text":"Value"}],"abstract":[{"type":"text","text":"This class is the main Swift wrapper with memory management"},{"type":"text","text":" "},{"type":"text","text":"for underlying "},{"type":"codeVoice","code":"GValues"},{"text":" (the opaque GLib structure used to","type":"text"},{"type":"text","text":" "},{"text":"hold different types of values.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/value","role":"symbol","title":"Value","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Value","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/ValueBase":{"type":"topic","url":"\/documentation\/glibobject\/valuebase","role":"symbol","abstract":[{"text":"An opaque structure used to hold different types of values.","type":"text"}],"kind":"symbol","title":"ValueBase","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBase","kind":"identifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase","navigatorTitle":[{"kind":"identifier","text":"ValueBase"}]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/ValueBase/take(variant:)":{"type":"topic","title":"take(variant:)","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/take(variant:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"take","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variant"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:4GLib10VariantRefV","text":"VariantRef"},{"kind":"text","text":"?)"}],"role":"symbol","url":"\/documentation\/glibobject\/valuebase\/take(variant:)","abstract":[{"type":"text","text":"Set the contents of a variant "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Value"},{"type":"text","text":" to "},{"type":"codeVoice","code":"variant"},{"type":"text","text":", and takes over"},{"type":"text","text":" "},{"text":"the ownership of the caller’s reference to ","type":"text"},{"code":"variant","type":"codeVoice"},{"text":";","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the caller doesn’t have to unref it any more (i.e. the reference"},{"text":" ","type":"text"},{"type":"text","text":"count of the variant is not increased)."}]}}}