{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/valuebase\/setboxedtakeownership(vboxed:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"setBoxedTakeOwnership(vBoxed:)","platforms":[],"symbolKind":"method","modules":[{"name":"GLibObject"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setBoxedTakeOwnership","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"vBoxed"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@gconstpointer","text":"gconstpointer"},{"kind":"text","text":"?)"}],"extendedModule":"GLibObject","externalID":"s:10GLibObject13ValueProtocolPAAE21setBoxedTakeOwnership01vF0ySVSg_tF::SYNTHESIZED::s:10GLibObject9ValueBaseC"},"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/setBoxedTakeOwnership(vBoxed:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"This is an internal function introduced mainly for C marshallers."}],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/ValueProtocol-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setBoxedTakeOwnership","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"vBoxed"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@T@gconstpointer","kind":"typeIdentifier","text":"gconstpointer"},{"text":"? = nil)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Set_boxed_take_ownership is deprecated:"}]},{"type":"text","text":" "},{"text":"Use g_value_take_boxed() instead.","type":"text"}]}],"kind":"content"}],"references":{"doc://GLibObject/documentation/GLibObject/ValueBase/ValueProtocol-Implementations":{"type":"topic","url":"\/documentation\/glibobject\/valuebase\/valueprotocol-implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"ValueProtocol Implementations","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/ValueProtocol-Implementations"},"doc://GLibObject/documentation/GLibObject/ValueBase/setBoxedTakeOwnership(vBoxed:)":{"title":"setBoxedTakeOwnership(vBoxed:)","deprecated":true,"type":"topic","role":"symbol","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase\/setBoxedTakeOwnership(vBoxed:)","url":"\/documentation\/glibobject\/valuebase\/setboxedtakeownership(vboxed:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setBoxedTakeOwnership","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"vBoxed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@gconstpointer","text":"gconstpointer"},{"text":"?)","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"This is an internal function introduced mainly for C marshallers."}]},"doc://GLibObject/documentation/GLibObject/ValueBase":{"type":"topic","url":"\/documentation\/glibobject\/valuebase","role":"symbol","abstract":[{"text":"An opaque structure used to hold different types of values.","type":"text"}],"kind":"symbol","title":"ValueBase","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBase","kind":"identifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueBase","navigatorTitle":[{"kind":"identifier","text":"ValueBase"}]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"}}}