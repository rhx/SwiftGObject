{"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/registerType(parentType:typeName:typeInfo:flags:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Looks up or registers a type that is implemented with a particular"},{"text":" ","type":"text"},{"type":"text","text":"type plugin. If a type with name "},{"type":"codeVoice","code":"typeName"},{"type":"text","text":" was previously registered,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"Type","type":"codeVoice"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"type":"text","text":" "},{"type":"text","text":"is newly registered, and the resulting "},{"type":"codeVoice","code":"Type"},{"type":"text","text":" identifier returned."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"registerType","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TypeInfoT","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"parentType"},{"kind":"text","text":": "},{"text":"GType","kind":"typeIdentifier","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"text":"typeName","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafePointer","preciseIdentifier":"s:SP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"gchar","kind":"typeIdentifier","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"text":"typeInfo","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TypeInfoT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"flags","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeFlags","text":"TypeFlags","preciseIdentifier":"s:10GLibObject9TypeFlagsV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"GType","kind":"typeIdentifier","preciseIdentifier":"c:@T@GType"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"TypeInfoT","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeInfoProtocol","preciseIdentifier":"s:10GLibObject16TypeInfoProtocolP","text":"TypeInfoProtocol","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"When reregistering a type (typically because a module is unloaded","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"then reloaded, and reinitialized), "},{"type":"codeVoice","code":"module"},{"text":" and ","type":"text"},{"code":"parentType","type":"codeVoice"},{"type":"text","text":" must"},{"type":"text","text":" "},{"type":"text","text":"be the same as they were previously."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As long as any instances of the type exist, the type plugin will"},{"type":"text","text":" "},{"text":"not be unloaded.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Since 2.56 if "},{"code":"module","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" this will call ","type":"text"},{"type":"codeVoice","code":"g_type_register_static()"},{"type":"text","text":" "},{"text":"instead. This can be used when making a static build of the module.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"]]},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/typemoduleprotocol\/registertype(parenttype:typename:typeinfo:flags:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"registerType"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"TypeInfoT"},{"kind":"text","text":">("},{"text":"parentType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@GType","text":"GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"typeName"},{"kind":"text","text":": "},{"text":"UnsafePointer","preciseIdentifier":"s:SP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"gchar","kind":"typeIdentifier","preciseIdentifier":"c:@T@gchar"},{"text":">!, ","kind":"text"},{"text":"typeInfo","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TypeInfoT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"flags","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TypeFlags","kind":"typeIdentifier","preciseIdentifier":"s:10GLibObject9TypeFlagsV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@T@GType","text":"GType","kind":"typeIdentifier"}],"modules":[{"name":"GLibObject"}],"externalID":"s:10GLibObject18TypeModuleProtocolPAAE08registerC006parentC08typeName0H4Info5flagsS2u_SPys4Int8VGSgqd__AA0C5FlagsVtAA0cjE0Rd__lF","extendedModule":"GLibObject","role":"symbol","title":"registerType(parentType:typeName:typeInfo:flags:)","roleHeading":"Instance Method"},"references":{"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/registerType(parentType:typeName:typeInfo:flags:)":{"url":"\/documentation\/glibobject\/typemoduleprotocol\/registertype(parenttype:typename:typeinfo:flags:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerType"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TypeInfoT"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"parentType"},{"text":": ","kind":"text"},{"text":"GType","kind":"typeIdentifier","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"text":"typeName","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafePointer","preciseIdentifier":"s:SP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"c:@T@gchar","text":"gchar","kind":"typeIdentifier"},{"kind":"text","text":">!, "},{"text":"typeInfo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TypeInfoT","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10GLibObject9TypeFlagsV","text":"TypeFlags"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@GType","text":"GType"}],"type":"topic","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/registerType(parentType:typeName:typeInfo:flags:)","role":"symbol","abstract":[{"text":"Looks up or registers a type that is implemented with a particular","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type plugin. If a type with name "},{"code":"typeName","type":"codeVoice"},{"text":" was previously registered,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"Type"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"text":" ","type":"text"},{"text":"is newly registered, and the resulting ","type":"text"},{"code":"Type","type":"codeVoice"},{"text":" identifier returned.","type":"text"}],"kind":"symbol","title":"registerType(parentType:typeName:typeInfo:flags:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol":{"type":"topic","role":"symbol","url":"\/documentation\/glibobject\/typemoduleprotocol","abstract":[{"code":"GTypeModule","type":"codeVoice"},{"text":" provides a simple implementation of the ","type":"text"},{"code":"GTypePlugin","type":"codeVoice"},{"text":" ","type":"text"},{"text":"interface.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TypeModuleProtocol"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","kind":"symbol","title":"TypeModuleProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypeModuleProtocol","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeFlags":{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeFlags","title":"TypeFlags","url":"\/documentation\/glibobject\/typeflags","role":"symbol","abstract":[{"type":"text","text":"Bit masks used to check or determine characteristics of a type."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypeFlags","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"TypeFlags","kind":"identifier"}]},"doc://GLibObject/documentation/GLibObject/TypeInfoProtocol":{"kind":"symbol","url":"\/documentation\/glibobject\/typeinfoprotocol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeInfoProtocol"}],"abstract":[{"text":"This structure is used to provide the type system with the information","type":"text"},{"type":"text","text":" "},{"type":"text","text":"required to initialize and destruct (finalize) a typeâ€™s class and"},{"type":"text","text":" "},{"text":"its instances.","type":"text"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeInfoProtocol","title":"TypeInfoProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeInfoProtocol"}]}}}