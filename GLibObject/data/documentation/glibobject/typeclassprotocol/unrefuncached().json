{"kind":"symbol","abstract":[{"type":"text","text":"A variant of "},{"type":"codeVoice","code":"g_type_class_unref()"},{"type":"text","text":" for use in "},{"isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"implementations. It unreferences a class without consulting the chain"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"GTypeClassCacheFuncs","type":"codeVoice"},{"type":"text","text":", avoiding the recursion which would occur"},{"text":" ","type":"text"},{"type":"text","text":"otherwise."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassProtocol\/unrefUncached()"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unrefUncached"},{"text":"()","kind":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/typeclassprotocol\/unrefuncached()"]}],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassProtocol"]]},"sections":[],"metadata":{"title":"unrefUncached()","symbolKind":"method","modules":[{"name":"GLibObject"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"unrefUncached","kind":"identifier"},{"kind":"text","text":"()"}],"extendedModule":"GLibObject","externalID":"s:10GLibObject17TypeClassProtocolPAAE13unrefUncachedyyF"},"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"},"doc://GLibObject/documentation/GLibObject/TypeClassCacheFunc":{"kind":"symbol","title":"TypeClassCacheFunc","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypeClassCacheFunc","kind":"identifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeClassCacheFunc"}],"abstract":[{"type":"text","text":"A callback function which is called when the reference count of a class"},{"type":"text","text":" "},{"text":"drops to zero.","type":"text"}],"url":"\/documentation\/glibobject\/typeclasscachefunc"},"doc://GLibObject/documentation/GLibObject/TypeClassProtocol":{"abstract":[{"type":"text","text":"An opaque structure used as the base of all classes."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassProtocol","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeClassProtocol"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeClassProtocol"}],"title":"TypeClassProtocol","url":"\/documentation\/glibobject\/typeclassprotocol"},"doc://GLibObject/documentation/GLibObject/TypeClassProtocol/unrefUncached()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"unrefUncached","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassProtocol\/unrefUncached()","kind":"symbol","type":"topic","title":"unrefUncached()","url":"\/documentation\/glibobject\/typeclassprotocol\/unrefuncached()","role":"symbol","abstract":[{"text":"A variant of ","type":"text"},{"type":"codeVoice","code":"g_type_class_unref()"},{"type":"text","text":" for use in "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"implementations. It unreferences a class without consulting the chain"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"GTypeClassCacheFuncs"},{"text":", avoiding the recursion which would occur","type":"text"},{"type":"text","text":" "},{"type":"text","text":"otherwise."}]}}}