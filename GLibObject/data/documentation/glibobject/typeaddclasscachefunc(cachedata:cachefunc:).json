{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/glibobject\/typeaddclasscachefunc(cachedata:cachefunc:)"]}],"abstract":[{"type":"text","text":"Adds a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc"},{"type":"text","text":" to be called before the reference count of a"},{"text":" ","type":"text"},{"text":"class goes from one to zero. This can be used to prevent premature class","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"destruction. All installed "},{"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc","type":"reference","isActive":true},{"type":"text","text":" functions will be chained"},{"text":" ","type":"text"},{"text":"until one of them returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":". The functions have to check the class id"},{"type":"text","text":" "},{"type":"text","text":"passed in to figure whether they actually want to cache the class of this"},{"text":" ","type":"text"},{"text":"type, since all classes are routed through the same ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc"},{"text":" ","type":"text"},{"text":"chain.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"typeAddClassCacheFunc","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cacheData","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:gtypes.h@T@gpointer","text":"gpointer"},{"kind":"text","text":"? = nil, "},{"text":"cacheFunc","kind":"externalParam"},{"kind":"text","text":": "},{"text":"GTypeClassCacheFunc","kind":"typeIdentifier","preciseIdentifier":"c:gtype.h@T@GTypeClassCacheFunc"},{"kind":"text","text":"?)"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"symbolKind":"func","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"typeAddClassCacheFunc","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cacheData"},{"kind":"text","text":": "},{"text":"gpointer","kind":"typeIdentifier","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"text":"?, ","kind":"text"},{"text":"cacheFunc","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:gtype.h@T@GTypeClassCacheFunc","text":"GTypeClassCacheFunc"},{"kind":"text","text":"?)"}],"title":"typeAddClassCacheFunc(cacheData:cacheFunc:)","roleHeading":"Function","externalID":"s:10GLibObject21typeAddClassCacheFunc9cacheData0hG0ySvSg_s5Int32VAE_SpySo06_GTypeE0VGSgtXCSgtF","modules":[{"name":"GLibObject"}],"role":"symbol"},"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/typeAddClassCacheFunc(cacheData:cacheFunc:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"references":{"doc://GLibObject/documentation/GLibObject/TypeClassCacheFunc":{"kind":"symbol","title":"TypeClassCacheFunc","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypeClassCacheFunc","kind":"identifier"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeClassCacheFunc"}],"abstract":[{"type":"text","text":"A callback function which is called when the reference count of a class"},{"type":"text","text":" "},{"text":"drops to zero.","type":"text"}],"url":"\/documentation\/glibobject\/typeclasscachefunc"},"doc://GLibObject/documentation/GLibObject/typeAddClassCacheFunc(cacheData:cacheFunc:)":{"abstract":[{"text":"Adds a ","type":"text"},{"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc","isActive":true},{"type":"text","text":" to be called before the reference count of a"},{"text":" ","type":"text"},{"text":"class goes from one to zero. This can be used to prevent premature class","type":"text"},{"type":"text","text":" "},{"text":"destruction. All installed ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc"},{"text":" functions will be chained","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"until one of them returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The functions have to check the class id"},{"type":"text","text":" "},{"text":"passed in to figure whether they actually want to cache the class of this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type, since all classes are routed through the same "},{"isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeClassCacheFunc","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"chain."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/typeAddClassCacheFunc(cacheData:cacheFunc:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"typeAddClassCacheFunc","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cacheData","kind":"externalParam"},{"kind":"text","text":": "},{"text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"cacheFunc"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:gtype.h@T@GTypeClassCacheFunc","kind":"typeIdentifier","text":"GTypeClassCacheFunc"},{"text":"?)","kind":"text"}],"kind":"symbol","title":"typeAddClassCacheFunc(cacheData:cacheFunc:)","url":"\/documentation\/glibobject\/typeaddclasscachefunc(cachedata:cachefunc:)"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","url":"\/documentation\/glibobject","title":"GLibObject","type":"topic"}}}